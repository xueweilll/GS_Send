//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5472
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5472 版自动生成。
// 
#pragma warning disable 1591

namespace CZZD.GSZX.S.UI.czzd.gszx.web.send {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="_SendSoap", Namespace="http://czzd.gszx.web.send")]
    public partial class _Send : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterDataInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrdersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public _Send() {
            this.Url = global::CZZD.GSZX.S.UI.Properties.Settings.Default.gszx_s_czzd_gszx_send__Send;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetSystemTimeCompletedEventHandler GetSystemTimeCompleted;
        
        /// <remarks/>
        public event GetMasterDataInfoCompletedEventHandler GetMasterDataInfoCompleted;
        
        /// <remarks/>
        public event GetOrderIdsCompletedEventHandler GetOrderIdsCompleted;
        
        /// <remarks/>
        public event GetOrdersCompletedEventHandler GetOrdersCompleted;
        
        /// <remarks/>
        public event SelectOrdersCompletedEventHandler SelectOrdersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/HelloWorld", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/GetSystemTime", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSystemTime() {
            object[] results = this.Invoke("GetSystemTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemTimeAsync() {
            this.GetSystemTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetSystemTimeAsync(object userState) {
            if ((this.GetSystemTimeOperationCompleted == null)) {
                this.GetSystemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemTimeOperationCompleted);
            }
            this.InvokeAsync("GetSystemTime", new object[0], this.GetSystemTimeOperationCompleted, userState);
        }
        
        private void OnGetSystemTimeOperationCompleted(object arg) {
            if ((this.GetSystemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemTimeCompleted(this, new GetSystemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/GetMasterDataInfo", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMasterDataInfo(string tableName, string lastUpdateTime, string time, string keys) {
            object[] results = this.Invoke("GetMasterDataInfo", new object[] {
                        tableName,
                        lastUpdateTime,
                        time,
                        keys});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterDataInfoAsync(string tableName, string lastUpdateTime, string time, string keys) {
            this.GetMasterDataInfoAsync(tableName, lastUpdateTime, time, keys, null);
        }
        
        /// <remarks/>
        public void GetMasterDataInfoAsync(string tableName, string lastUpdateTime, string time, string keys, object userState) {
            if ((this.GetMasterDataInfoOperationCompleted == null)) {
                this.GetMasterDataInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterDataInfoOperationCompleted);
            }
            this.InvokeAsync("GetMasterDataInfo", new object[] {
                        tableName,
                        lastUpdateTime,
                        time,
                        keys}, this.GetMasterDataInfoOperationCompleted, userState);
        }
        
        private void OnGetMasterDataInfoOperationCompleted(object arg) {
            if ((this.GetMasterDataInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterDataInfoCompleted(this, new GetMasterDataInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/GetOrderIds", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrderIds(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys) {
            object[] results = this.Invoke("GetOrderIds", new object[] {
                        type,
                        startTime,
                        endTime,
                        sendStatus,
                        strWhere,
                        time,
                        keys});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderIdsAsync(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys) {
            this.GetOrderIdsAsync(type, startTime, endTime, sendStatus, strWhere, time, keys, null);
        }
        
        /// <remarks/>
        public void GetOrderIdsAsync(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys, object userState) {
            if ((this.GetOrderIdsOperationCompleted == null)) {
                this.GetOrderIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderIdsOperationCompleted);
            }
            this.InvokeAsync("GetOrderIds", new object[] {
                        type,
                        startTime,
                        endTime,
                        sendStatus,
                        strWhere,
                        time,
                        keys}, this.GetOrderIdsOperationCompleted, userState);
        }
        
        private void OnGetOrderIdsOperationCompleted(object arg) {
            if ((this.GetOrderIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderIdsCompleted(this, new GetOrderIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/GetOrders", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrders(string type, string orderID, string time, string keys) {
            object[] results = this.Invoke("GetOrders", new object[] {
                        type,
                        orderID,
                        time,
                        keys});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersAsync(string type, string orderID, string time, string keys) {
            this.GetOrdersAsync(type, orderID, time, keys, null);
        }
        
        /// <remarks/>
        public void GetOrdersAsync(string type, string orderID, string time, string keys, object userState) {
            if ((this.GetOrdersOperationCompleted == null)) {
                this.GetOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersOperationCompleted);
            }
            this.InvokeAsync("GetOrders", new object[] {
                        type,
                        orderID,
                        time,
                        keys}, this.GetOrdersOperationCompleted, userState);
        }
        
        private void OnGetOrdersOperationCompleted(object arg) {
            if ((this.GetOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://czzd.gszx.web.send/SelectOrders", RequestNamespace="http://czzd.gszx.web.send", ResponseNamespace="http://czzd.gszx.web.send", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectOrders(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys) {
            object[] results = this.Invoke("SelectOrders", new object[] {
                        type,
                        startTime,
                        endTime,
                        sendStatus,
                        strWhere,
                        time,
                        keys});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrdersAsync(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys) {
            this.SelectOrdersAsync(type, startTime, endTime, sendStatus, strWhere, time, keys, null);
        }
        
        /// <remarks/>
        public void SelectOrdersAsync(string type, string startTime, string endTime, string sendStatus, string strWhere, string time, string keys, object userState) {
            if ((this.SelectOrdersOperationCompleted == null)) {
                this.SelectOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrdersOperationCompleted);
            }
            this.InvokeAsync("SelectOrders", new object[] {
                        type,
                        startTime,
                        endTime,
                        sendStatus,
                        strWhere,
                        time,
                        keys}, this.SelectOrdersOperationCompleted, userState);
        }
        
        private void OnSelectOrdersOperationCompleted(object arg) {
            if ((this.SelectOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrdersCompleted(this, new SelectOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetSystemTimeCompletedEventHandler(object sender, GetSystemTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMasterDataInfoCompletedEventHandler(object sender, GetMasterDataInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterDataInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterDataInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetOrderIdsCompletedEventHandler(object sender, GetOrderIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetOrdersCompletedEventHandler(object sender, GetOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SelectOrdersCompletedEventHandler(object sender, SelectOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591